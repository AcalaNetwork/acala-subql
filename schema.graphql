type KVData @jsonField {
  key: String
  value: String
  type: String
}

type SystemConsts @entity {
  id: ID!
  liquidToken: Token
  stakignToken: Token
  nativeToken: Token
  stableToken: Token
}

type Block @entity {
  id: ID!

  number: BigInt
  timestamp: Date
  parentHash: String
  specVersion: String
  stateRoot: String
  extrinsicRoot: String

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!

  method: String
  section: String
  args: [KVData]
  signer: Account
  nonce: BigInt
  timestamp: Date
  signature: String
  tip: String
  isSigned: Boolean
  isSuccess: Boolean

  block: Block
  events: [Event] @derivedFrom(field: "extrinsic")
  calls: [Call] @derivedFrom(field: "extrinsic")
}

type Call @entity {
  id: ID!

  section: String
  method: String
  args:[KVData] 
  timestamp: Date
  isSuccess: Boolean

  signer: Account
  extrinsic: Extrinsic
  parentCall: Call

  calls: [Call] @derivedFrom(field: "parentCall")
}

type Event @entity {
  id: ID!

  index: Int
  section: String
  method: String
  data: [KVData]

  block: Block
  extrinsic: Extrinsic
}

type Account @entity {
  id: ID!

  txCount: Int
  createAtBlock: Block

  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
  calls: [Call] @derivedFrom(field: "signer")
  transferIn: [Transfer] @derivedFrom(field: "to")
  transferOut: [Transfer] @derivedFrom(field: "from")
  position: [LoanPosition] @derivedFrom(field: "account")
}

type Token @entity {
  id: ID!

  symbol: String
  decimal: Int
  isDexShare: Boolean
}

type OracleFeedRecord @entity {
  id: ID!

  token: Token
  account: Account
  provider: String

  feedPrice: String

  updateAtBlock: Block
}

type Transfer @entity {
  id: ID!

  from: Account
  to: Account
  token: Token
  amount: String
  amountInUSD: String

  extrinsic: Extrinsic
  call: Call
  timestamp: Date
  isSuccess: Boolean
}

type LoanPosition @entity {
  id: ID!

  account: Account
  token: Token

  debit: BigInt
  collateral: BigInt
}

type LoanAction @entity {
  id: ID!

  account: Account
  token: Token
  collateral: BigInt
  debit: BigInt
  exchangeRate: BigInt

  extrinsic: Extrinsic
  call: Call
  timestamp: Date
  isSuccess: Boolean
}

type DexAction @entity {
  id: ID!

  account: Account

  type: String
  subType: String
  data: [KVData]

  extrinsic: Extrinsic
  timestamp: Date
}